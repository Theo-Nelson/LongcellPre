}
if(is.null(count)){
count = rep(1,length(unique(dis$node1)))
names(count) = unique(dis$node1)
}
neighbors <- as.data.frame(dis %>% group_by(node1) %>%
summarise(neighbor = list(node2)))
index = neighbors$node1
neighbor = neighbors$neighbor
count = count[index]
snn <- shareNeighbor(index,neighbor,count)
return(snn)
}
Rcpp::sourceCpp("src/umi_cluster.cpp")
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
test2
test1
Rcpp::sourceCpp("src/umi_cluster.cpp")
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
test2
test1
data = cbind(rep(1:100,100),rep(1:100,each = 100))
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
head(test1)
head(test2)
data = cbind(rep(1:100,100),rep(101:200,each = 100))
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
head(test1 )
head(test2 )
test1[test1$node1 == 1,]
data = cbind(rep(1:10,10),rep(11:20,each = 10))
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
test1
test2
createSNN_cpp <- function(dis,count = NULL,self = FALSE){
dis <- as.matrix(dis)
dis <- rbind(dis,dis[,c(2,1)])
dis <- as.data.frame(dis)
colnames(dis) <- c("node1","node2")
dis$node1 = as.character(dis$node1)
dis$node2 = as.character(dis$node2)
if(!self){
dis = dis %>% filter(node1 != node2)
}
if(is.null(count)){
count = rep(1,length(unique(dis$node1)))
names(count) = unique(dis$node1)
}
neighbors <- as.data.frame(dis %>% group_by(node1) %>%
summarise(neighbor = list(node2)))
return(neighbors)
index = neighbors$node1
neighbor = neighbors$neighbor
count = count[index]
snn <- shareNeighbor(index,neighbor,count)
return(snn)
}
test2 = createSNN_cpp(data)
test2
shareNeighbor(test2$node1,test2$neighbor,rep(1,nrow(test2)))
Rcpp::sourceCpp("src/umi_cluster.cpp")
test = shareNeighbor(test2$node1,test2$neighbor,rep(1,nrow(test2)))
Rcpp::sourceCpp("src/umi_cluster.cpp")
test = shareNeighbor(test2$node1,test2$neighbor,rep(1,nrow(test2)))
test2
test1
tesst2
test2
Rcpp::sourceCpp("src/umi_cluster.cpp")
test = shareNeighbor(test2$node1,test2$neighbor,rep(1,nrow(test2)))
test2
tet
test
Rcpp::sourceCpp("src/umi_cluster.cpp")
test = shareNeighbor(test2$node1,test2$neighbor,rep(1,nrow(test2)))
Rcpp::sourceCpp("src/umi_cluster.cpp")
test = shareNeighbor(test2$node1,test2$neighbor,rep(1,nrow(test2)))
head(test)
test
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
data = cbind(rep(1:100,100),rep(101:200,each = 100))
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
head(test1)
head(test2)
createSNN_cpp <- function(dis,count = NULL,self = FALSE){
dis <- as.matrix(dis)
dis <- rbind(dis,dis[,c(2,1)])
dis <- as.data.frame(dis)
colnames(dis) <- c("node1","node2")
dis$node1 = as.character(dis$node1)
dis$node2 = as.character(dis$node2)
if(!self){
dis = dis %>% filter(node1 != node2)
}
if(is.null(count)){
count = rep(1,length(unique(dis$node1)))
names(count) = unique(dis$node1)
}
neighbors <- as.data.frame(dis %>% group_by(node1) %>%
summarise(neighbor = list(node2)))
#return(neighbors)
index = neighbors$node1
neighbor = neighbors$neighbor
count = count[index]
snn <- shareNeighbor(index,neighbor,count)
return(snn)
}
start = Sys.time()
test1 = createSNN(data)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = createSNN_cpp(data)
end = Sys.time()
print(end - start)
head(test1)
head(test2)
head(cell_exon)
head(data)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
cell_exon = readRDS("./testdata/cell_exon.rds")
head(cell_exon)
start = Sys.time()
test = splice_site_table(cell_exon$isoform)
end = Sys.time()
print(end - start)
source("C:/D/Necessary/Upenn/Thesis/projects/Single-cell-Long-reads/methods/LongcellPre/R/splice_site_correct.R")
start = Sys.time()
test = splice_site_table(cell_exon$isoform)
end = Sys.time()
print(end - start)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
start = Sys.time()
test = splice_site_table(cell_exon$isoform)
end = Sys.time()
print(end - start)
start = Sys.time()
test1 = splice_site_table(cell_exon$isoform)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform)
end = Sys.time()
print(end - start)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
start = Sys.time()
test1 = splice_site_table(cell_exon$isoform)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform,"|",",",10)
end = Sys.time()
print(end - start)
test2
dim(test1)
head(test1)
length(test1)
length(test2$start)
test1 = do.call(rbind,test1)
test2 = do.call(cbind,test2)
length(test2$start)
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform,"|",",",10)
end = Sys.time()
print(end - start)
length(test2$start)
length(test2$end)
dim(test2$mid)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform,"|",",",10)
end = Sys.time()
print(end - start)
temp = splice_site_count(cell_exon$isoform)
sites_cpp = (56158920, 56158902, 56160670, 56160626, 56159587, 56161387, 56158404, 56162331, 56159730, 56160320, 56158711, 56160243, 56159975, 56159622, 56160025, 56158684 ,56160148 ,56158415, 56162264 ,56162855)
sites_cpp = (56158920, 56158902, 56160670,
56160626, 56159587, 56161387,
56158404, 56162331, 56159730,
56160320, 56158711, 56160243,
56159975, 56159622, 56160025,
56158684 ,56160148 ,56158415,
56162264 ,56162855)
sites_cpp = c(56158920, 56158902, 56160670,
56160626, 56159587, 56161387,
56158404, 56162331, 56159730,
56160320, 56158711, 56160243,
56159975, 56159622, 56160025,
56158684 ,56160148 ,56158415,
56162264,56162855)
temp
names(temp[temp >= 10])
temp = names(temp[temp >= 10])
length(temp)
length(sites_cpp)
setdiff(temp,sites_cpp)
setdiff(sites_cpp,temp)
temp = splice_site("56158338,56158404|56158684,56158711|56159975,56160148|56160243,56160710|56160764,56161422")
temp
setdiff(temp[2:(length(temp)-1)],sites_cpp)
sites_cpp
sort(sites_cpp)
temp
length(test1)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
start = Sys.time()
test1 = splice_site_table(cell_exon$isoform)
end = Sys.time()
print(end - start)
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform,"|",",",10)
end = Sys.time()
print(end - start)
test1 = do.call(rbind,test1)
dim(test1)
names(test2)
length(test2$start)
dim(test2$mid)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform,"|",",",10)
end = Sys.time()
print(end - start)
names(test2 )
head(test2$mid)
colnames(test2$mid)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform,"|",",",10)
end = Sys.time()
print(end - start)
names(test2 )
head(test2$id )
head(test2$mid)
dim(test2$mid)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
start = Sys.time()
test2 = splice_site_table_cpp(cell_exon$isoform,"|",",",10)
end = Sys.time()
print(end - start)
head(test2$mid)
dim(test2$mid)
length(test2$id)
temp = do.call(rbind,test2)
temp = do.call(cbind,test2)
head(temp)
test2$start = as.numeric(test2$start)
test2$end = as.numeric(test2$end)
temp = do.call(cbind,test2)
head(temp)
600000/3600
library(stats4)
library(Rcpp)
library(dbscan)
library(e1071)
library(dplyr)
library(reshape2)
library(tidyr)
library(transport)
library(RcppHungarian)
library(NameNeedle)
library(igraph)
library(MASS)
library(profvis)
start = Sys.time()
test = gene_umi_count(cell_exon,cell_exon$edit)
end = Sys.time()
print(end - start)
sourceCpp("./src/splice_site_correct.cpp")
sourceCpp("./src/umi_dist.cpp")
sourceCpp("./src/umi_cluster.cpp")
source("./R/umi_cluster.R")
source("./R/splice_site_correct.R")
source("./R/reads_filter.R")
source("./R/umi_count_functions.R")
start = Sys.time()
test = gene_umi_count(cell_exon,cell_exon$edit)
end = Sys.time()
print(end - start)
start = Sys.time()
test = gene_umi_count(cell_exon,cell_exon$edit)
end = Sys.time()
print(end - start)
source("./R/umi_cluster.R")
start = Sys.time()
test = gene_umi_count(cell_exon,cell_exon$edit)
end = Sys.time()
print(end - start)
start = Sys.time()
test = gene_umi_count(cell_exon,cell_exon$edit)
end = Sys.time()
print(end - start)
temp = cbind(rep(1:5,each =3),rep(1:3,5))
temp
temp = as.data.frame(cbind(rep(1:5,each =3),rep(1:3,5)))
temp$count = 1:nrow(temp)
temp
pivot_wider(temp,names_from = "V2",values_from = "count")
long2wide(temp,names_from = "V2",values_from = "count")
long2wide(temp,names_from = "V2",value_from = "count")
long2wide(temp,names_from = c("V1","V2"),value_from = "count")
long2wide(temp,names_from = c("V1","V2"),value_from = "count",symmetric = F)
temp = as.data.frame(cbind(rep(1:5,each =3),rep(6:9,5)))
temp = as.data.frame(cbind(rep(1:5,each =3),rep(6:8,5)))
long2wide(temp,names_from = c("V1","V2"),value_from = "count",symmetric = F)
temp$count = 1:nrow(temp)
long2wide(temp,names_from = c("V1","V2"),value_from = "count",symmetric = F)
test = pivot_wider(temp,names_from = "V2",values_from = "count")
test
test = as.data.frame(test)
rownames(test) = test$V1
test = test[,-1]
test
test[as.character(1:8),as.character(1:8)]
test[as.character(1:8),]
Rcpp::sourceCpp("src/exon_corres.cpp")
Rcpp::sourceCpp("src/exon_corres.cpp")
bin2exonid("100,200",0,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,200",1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,200",2,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,200",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,201",0,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,202",0,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,202",2,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,202",1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,202",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,198",0,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,198",1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,198",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,198",2,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,197",2,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,197",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
Rcpp::sourceCpp("src/exon_corres.cpp")
bin2exonid("100,197",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
Rcpp::sourceCpp("src/exon_corres.cpp")
bin2exonid("100,197",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,197",0,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,197",1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("100,197",2,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("50,197",1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("50,197",0,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("50,197",2,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("50,197",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("60,70",-1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("60,70",0,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("60,70",1,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("60,70",2,c(50,100,250),c(70,200,300),c("a","b","c"))
bin2exonid("60,150",2,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("60,150",1,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("60,150",-1,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("60,150",0,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("50,200",0,c(50,101,250),c(100,200,300),c("a","b","c"))
Rcpp::sourceCpp("src/exon_corres.cpp")
bin2exonid("50,200",0,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("50,200",0,c(50,100,250),c(100,200,300),c("a","b","c"))
bin2exonid("50,200",0,c(50,101,250),c(100,200,300),c("a","b","c"))
Rcpp::sourceCpp("src/exon_corres.cpp")
bin2exonid("50,200",0,c(50,101,250),c(100,200,300),c("a","b","c"))
Rcpp::sourceCpp("src/exon_corres.cpp")
bin2exonid("50,200",0,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("55,200",0,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("55,200",-1,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("95,200",-1,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("95,200",1,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("95,200",2,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("55,200",2,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("55,150",2,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("55,150",12,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("55,150",1,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("50,150",1,c(50,101,250),c(100,200,300),c("a","b","c"))
bin2exonid("50,150",-1,c(50,101,250),c(100,200,300),c("a","b","c"))
Rcpp::sourceCpp("src/exon_corres.cpp")
isoform = c(rep("50,150|200,250|300,400",5),
rep("50,150|200,250|300,400",5))
start = c(50,101,200,300)
end = c(100,150,250,400)
exon_id = c("a","b","c","d")
isos2exonids_index(isoform,start,end,exon_id)
Rcpp::sourceCpp("src/exon_corres.cpp")
isoform = c("50,150|200,250|300,400",
"25,150|200,250|300,400",
"75,150|200,250|300,350",
"75,150|225,250|300,400",
"50,150|300,400")
start = c(50,101,200,300)
end = c(100,150,250,400)
exon_id = c("a","b","c","d")
isos2exonids_index(isoform,start,end,exon_id)
Rcpp::sourceCpp("src/exon_corres.cpp")
Rcpp::sourceCpp("src/exon_corres.cpp")
isos2exonids_index(isoform,start,end,exon_id)
Rcpp::sourceCpp("src/exon_corres.cpp")
isos2exonids_index(isoform,start,end,exon_id)
Rcpp::sourceCpp("src/exon_corres.cpp")
isos2exonids_index(isoform,start,end,exon_id)
Rcpp::sourceCpp("src/exon_corres.cpp")
isos2exonids_index(isoform,start,end,exon_id)
Rcpp::sourceCpp("src/exon_corres.cpp")
isos2exonids_index(isoform,start,end,exon_id)
isoform = c("50,150|200,250|300,400",
"25,150|200,250|300,400",
"75,150|200,250|300,350",
"75,150|225,250|300,400",
"50,150|300,400","350,450")
start = c(50,101,200,300)
end = c(100,150,250,400)
exon_id = c("a","b","c","d")
isos2exonids_index(isoform,start,end,exon_id)
isoform = c("50,150|200,250|300,400",
"25,150|200,250|300,400",
"75,150|200,250|300,350",
"75,150|225,250|300,400",
"50,150|300,400","350,450","280,350")
start = c(50,101,200,300)
end = c(100,150,250,400)
exon_id = c("a","b","c","d")
isos2exonids_index(isoform,start,end,exon_id)
isoform = c("50,150|200,250|300,400",
"25,150|200,250|300,400",
"75,150|200,250|300,350",
"75,150|225,250|300,400",
"50,150|300,400","350,450","300,350")
start = c(50,101,200,300)
end = c(100,150,250,400)
exon_id = c("a","b","c","d")
isos2exonids_index(isoform,start,end,exon_id)
isoform = c("50,150|200,250|300,400",
"25,150|200,250|300,400",
"75,150|200,250|300,350",
"75,150|225,250|300,400",
"50,150|300,400","350,450","300,305")
start = c(50,101,200,300)
end = c(100,150,250,400)
exon_id = c("a","b","c","d")
isos2exonids_index(isoform,start,end,exon_id)
Rcpp::sourceCpp("src/splice_site_correct.cpp")
Rcpp::sourceCpp("src/reads_extraction.cpp")
Rcpp::sourceCpp("src/reads_extraction.cpp")
Rcpp::sourceCpp("src/reads_extraction.cpp")
Rcpp::sourceCpp("src/reads_extraction.cpp")
library(RcppParallel)
install.packages("RcppParallel")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
library(RcppParallel)
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/RcppParallel_test.cpp")
Rcpp::sourceCpp("src/reads_filter.cpp")
